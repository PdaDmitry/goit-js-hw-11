{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["'use strict';\n\nexport class ImageServer {\n  constructor(q) {\n    this.q = q;\n    this.KEY = '42263617-81d7156b9f7b88cd7b1016c2a';\n    this.URL = `https://pixabay.com/api/?key=${this.KEY}&q=${q}&image_type=photo&orientation=horizontal&safesearch=true`; //&per_page=8\n  }\n\n  getImages() {\n    const url = this.URL;\n    return fetch(url).then(response => response.json());\n  }\n}\n","'use strict';\n\nexport function createGalleryMarkup() {\n  return `\n  <form class=\"form\">\n    <input type=\"text\" name=\"picture\" placeholder=\"Search images...\" />\n    <button type=\"submit\">Search</button>\n  </form>\n  <span class=\"loader\"></span>\n  <ul class=\"gallery\"></ul>`;\n}\n\nexport function renderListGallery(images) {\n  const item = images\n    .map(el => {\n      const {\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = el;\n      return `<li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${webformatURL}\"\n      data-source=\"${largeImageURL}\"\n      alt=\"\"\n      title=\"${tags}\"\n    />\n    <ul class=\"image-info\">\n      <li class=\"info-item\">\n        <span class=\"info-item\">Likes</span>\n        <span class=\"item-quantity\">${likes}</span>\n      </li>\n       <li class=\"info-item\">\n        <span class=\"info-item\">Views</span>\n        <span class=\"item-quantity\">${views}</span>\n      </li>\n       <li class=\"info-item\">\n        <span class=\"info-item\">Comments</span>\n        <span class=\"item-quantity\">${comments}</span>\n      </li>\n       <li class=\"info-item\">\n        <span class=\"info-item\">Downloads</span>\n        <span class=\"item-quantity\">${downloads}</span>\n      </li>\n    </ul>\n  </a>\n  </li>`;\n    })\n    .join('\\n\\n');\n\n  return item;\n}\n","'use strict';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { ImageServer } from './js/pixabay-api';\nimport { createGalleryMarkup, renderListGallery } from './js/render-functions';\n\nconst galleryMarkup = createGalleryMarkup();\n\nconst body = document.querySelector('body');\nbody.insertAdjacentHTML('afterbegin', galleryMarkup);\n\nconst formEl = document.querySelector('form');\n\nconst loader = document.querySelector('.loader');\nloader.classList.add('is-hidden');\n\nconst gallery = document.querySelector('.gallery');\n\nconst input = document.querySelector('input');\ninput.classList.add('input');\n\nconst button = document.querySelector('button');\nbutton.classList.add('btn-search');\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let q = e.target.elements.picture.value.trim();\n  if (!q) {\n    gallery.innerHTML = '';\n    e.target.reset();\n    return alert('The form field must be filled in!');\n  }\n\n  let images = new ImageServer(q);\n  loader.classList.remove('is-hidden');\n\n  images\n    .getImages()\n    .then(data => {\n      if (data.hits.length === 0) {\n        gallery.innerHTML = '';\n        throw new Error();\n      }\n\n      const galleryHtml = renderListGallery(data.hits);\n      gallery.innerHTML = galleryHtml;\n\n      const show = new SimpleLightbox('.gallery a');\n      show.refresh();\n    })\n    .catch(error => {\n      iziToast.show({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        messageSize: '16px',\n        messageWeight: '400',\n        backgroundColor: '#ef4040',\n        messageColor: '#fff',\n        position: 'topRight',\n        iconUrl: './img/error.svg',\n      });\n    })\n    .finally(() => {\n      loader.classList.add('is-hidden');\n      e.target.reset();\n    });\n});\n"],"names":["ImageServer","q","url","response","createGalleryMarkup","renderListGallery","images","el","webformatURL","largeImageURL","tags","likes","views","comments","downloads","galleryMarkup","body","formEl","loader","gallery","input","button","e","data","galleryHtml","SimpleLightbox","error","iziToast"],"mappings":"6vBAEO,MAAMA,CAAY,CACvB,YAAYC,EAAG,CACb,KAAK,EAAIA,EACT,KAAK,IAAM,qCACX,KAAK,IAAM,gCAAgC,KAAK,GAAG,MAAMA,CAAC,0DAC3D,CAED,WAAY,CACV,MAAMC,EAAM,KAAK,IACjB,OAAO,MAAMA,CAAG,EAAE,KAAKC,GAAYA,EAAS,KAAI,CAAE,CACnD,CACH,CCXO,SAASC,GAAsB,CACpC,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAOT,CAEO,SAASC,EAAkBC,EAAQ,CA4CxC,OA3CaA,EACV,IAAIC,GAAM,CACT,KAAM,CACJ,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,EAAGP,EACJ,MAAO;AAAA,kCACqBE,CAAa;AAAA;AAAA;AAAA,aAGlCD,CAAY;AAAA,qBACJC,CAAa;AAAA;AAAA,eAEnBC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,sCAKmBC,CAAK;AAAA;AAAA;AAAA;AAAA,sCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,sCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,sCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,QAK/C,CAAK,EACA,KAAK;AAAA;AAAA,CAAM,CAGhB,CC9CA,MAAMC,EAAgBX,EAAmB,EAEnCY,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,mBAAmB,aAAcD,CAAa,EAEnD,MAAME,EAAS,SAAS,cAAc,MAAM,EAEtCC,EAAS,SAAS,cAAc,SAAS,EAC/CA,EAAO,UAAU,IAAI,WAAW,EAEhC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,UAAU,IAAI,OAAO,EAE3B,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,UAAU,IAAI,YAAY,EAEjCJ,EAAO,iBAAiB,SAAUK,GAAK,CACrCA,EAAE,eAAc,EAEhB,IAAIrB,EAAIqB,EAAE,OAAO,SAAS,QAAQ,MAAM,OACxC,GAAI,CAACrB,EACH,OAAAkB,EAAQ,UAAY,GACpBG,EAAE,OAAO,QACF,MAAM,mCAAmC,EAGlD,IAAIhB,EAAS,IAAIN,EAAYC,CAAC,EAC9BiB,EAAO,UAAU,OAAO,WAAW,EAEnCZ,EACG,UAAW,EACX,KAAKiB,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EACvB,MAAAJ,EAAQ,UAAY,GACd,IAAI,MAGZ,MAAMK,EAAcnB,EAAkBkB,EAAK,IAAI,EAC/CJ,EAAQ,UAAYK,EAEP,IAAIC,EAAe,YAAY,EACvC,QAAO,CAClB,CAAK,EACA,MAAMC,GAAS,CACdC,EAAS,KAAK,CACZ,QACE,2EACF,YAAa,OACb,cAAe,MACf,gBAAiB,UACjB,aAAc,OACd,SAAU,WACV,QAAS,iBACjB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbT,EAAO,UAAU,IAAI,WAAW,EAChCI,EAAE,OAAO,OACf,CAAK,CACL,CAAC"}